<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="guda.red.dao.MsgOutDOMapper" >
  <resultMap id="BaseResultMap" type="guda.red.dao.domain.MsgOutDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="taobao_seller_id" property="taobaoSellerId" jdbcType="BIGINT" />
    <result column="recv" property="recv" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="guda.red.dao.domain.MsgOutDO" extends="BaseResultMap" >
    <result column="msg_text" property="msgText" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, taobao_seller_id, recv, status, gmt_create
  </sql>
  <sql id="Blob_Column_List" >
    msg_text
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="guda.red.dao.domain.MsgOutDOCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from msg_out
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="guda.red.dao.domain.MsgOutDOCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from msg_out
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow >= 0" >
      limit ${startRow} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from msg_out
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from msg_out
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="guda.red.dao.domain.MsgOutDO" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into msg_out (taobao_seller_id, recv, status, 
      gmt_create, msg_text)
    values (#{taobaoSellerId,jdbcType=BIGINT}, #{recv,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{msgText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="guda.red.dao.domain.MsgOutDO" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into msg_out
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taobaoSellerId != null" >
        taobao_seller_id,
      </if>
      <if test="recv != null" >
        recv,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="msgText != null" >
        msg_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taobaoSellerId != null" >
        #{taobaoSellerId,jdbcType=BIGINT},
      </if>
      <if test="recv != null" >
        #{recv,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="msgText != null" >
        #{msgText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="guda.red.dao.domain.MsgOutDOCriteria" resultType="java.lang.Integer" >
    select count(*) from msg_out
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="guda.red.dao.domain.MsgOutDO" >
    update msg_out
    <set >
      <if test="taobaoSellerId != null" >
        taobao_seller_id = #{taobaoSellerId,jdbcType=BIGINT},
      </if>
      <if test="recv != null" >
        recv = #{recv,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="msgText != null" >
        msg_text = #{msgText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="guda.red.dao.domain.MsgOutDO" >
    update msg_out
    set taobao_seller_id = #{taobaoSellerId,jdbcType=BIGINT},
      recv = #{recv,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      msg_text = #{msgText,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="guda.red.dao.domain.MsgOutDO" >
    update msg_out
    set taobao_seller_id = #{taobaoSellerId,jdbcType=BIGINT},
      recv = #{recv,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>