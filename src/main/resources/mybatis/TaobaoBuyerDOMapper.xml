<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="guda.red.dao.TaobaoBuyerDOMapper" >
  <resultMap id="BaseResultMap" type="guda.red.dao.domain.TaobaoBuyerDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="taobao_seller_id" property="taobaoSellerId" jdbcType="BIGINT" />
    <result column="taobao_nick" property="taobaoNick" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, taobao_seller_id, taobao_nick, email, phone, address, gmt_created
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="guda.red.dao.domain.TaobaoBuyerDOCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from taobao_buyer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow >= 0" >
      limit ${startRow} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from taobao_buyer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from taobao_buyer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="guda.red.dao.domain.TaobaoBuyerDO" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into taobao_buyer (taobao_seller_id, taobao_nick, email, 
      phone, address, gmt_created
      )
    values (#{taobaoSellerId,jdbcType=BIGINT}, #{taobaoNick,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="guda.red.dao.domain.TaobaoBuyerDO" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into taobao_buyer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taobaoSellerId != null" >
        taobao_seller_id,
      </if>
      <if test="taobaoNick != null" >
        taobao_nick,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taobaoSellerId != null" >
        #{taobaoSellerId,jdbcType=BIGINT},
      </if>
      <if test="taobaoNick != null" >
        #{taobaoNick,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="guda.red.dao.domain.TaobaoBuyerDOCriteria" resultType="java.lang.Integer" >
    select count(*) from taobao_buyer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="guda.red.dao.domain.TaobaoBuyerDO" >
    update taobao_buyer
    <set >
      <if test="taobaoSellerId != null" >
        taobao_seller_id = #{taobaoSellerId,jdbcType=BIGINT},
      </if>
      <if test="taobaoNick != null" >
        taobao_nick = #{taobaoNick,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="guda.red.dao.domain.TaobaoBuyerDO" >
    update taobao_buyer
    set taobao_seller_id = #{taobaoSellerId,jdbcType=BIGINT},
      taobao_nick = #{taobaoNick,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>